<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>52</index><block>10</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>64</index><block>10</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>76</index><block>10</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>88</index><block>10</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>10</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>10</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>10</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>10</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateArithmeticCombinations</mutatedMethod><methodDescription>(III)Ljava/util/List;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>100</index><block>10</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>mutated return of Object value for mypackage/ArithmeticCombination::calculateArithmeticCombinations to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>8</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>mypackage.EquivalenceClasses.testNLessThanOne(mypackage.EquivalenceClasses)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>mypackage.EquivalenceClasses.testNGreaterThanMaximumNumber(mypackage.EquivalenceClasses)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>7</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticCombination.java</sourceFile><mutatedClass>mypackage.ArithmeticCombination</mutatedClass><mutatedMethod>calculateNumberOfCombinations</mutatedMethod><methodDescription>(Ljava/util/List;IIII)I</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>85</index><block>9</block><killingTest>mypackage.EquivalenceClasses.testNormalFlow(mypackage.EquivalenceClasses)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
</mutations>
